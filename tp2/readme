Q2
Quelles sont les conditions pour qu’une polyligne soit une ligne de toits ?
pour (x1,y1),(x2,y2),(x3,y3),(x4,y4)
x1<=x2
soit x1=x2, soit y1=y2

Q4
Pseudo-code du parcours

int x,y=0;
int dernier_y 
list <tuple (int,int)> polyline
tant que x n'est pas maximum, et y est différent de zéro alors
	  si le point(x,y+1) vaut 1 alors
	        y=y+1
	  sinon si le point(x+1,y) vaut 1 alors
         	on ajoute à polyline le couple (x,y)
		tant que le point(x+1,y) vaut 1 et (x,y+1)==0 alors
	            x=x+1
		fin tant que
	  sinon si le point(x,y-1) vaut 1 alors
	        y=y-1
	  sinon
	        erreur
fin tant que

fun pseudo-code


si on a npixel sur n pixel,
Dans le pire des cas, le tant que prend n opérations pour augmenter y
le deuxième tant que prend n opérations pour augmenter x

algo en O(n²)

Q5)
pseudo-code

list <tuple (int,int)> polyline
pour chaque rectancle R	
     iterateur it
     soit le point p1 haut gauche et p2 bas droit du rectancle.
     tant que p1(x)<it(x)
          it suivant
     fin tant que
     ajouter p1 dans la liste juste avant it(x)
     tant que vrai
     	  it suivant
     fin tant que
     ajouter p2 dans la liste juste avant it(x)
fin du pour chaque


le parcour avec l'iterateur est de complexité maximum de parcours+ajout soit n  + 2
on fait ça pour n/2 rectangle
donc l'algorithme est en n/2 * (n+2) = O(n²)

Q6